import React, { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { createCourse, fetchCourses } from '../../features/courses/courseSlice';
import { useNavigate } from 'react-router-dom';

// --- THEME CONSTANTS ---
const PRIMARY_COLOR = '#473E7A'; // MongoDB Purple
const SOFT_BORDER_COLOR = '#EBEBEB'; 
const WHITE = '#FFFFFF';
const DANGER_COLOR = '#E53935'; 

// Shared style for input, textarea, and select
const inputStyle = {
Â  Â  padding: '10px 12px',
Â  Â  border: `1px solid ${SOFT_BORDER_COLOR}`,
Â  Â  borderRadius: 4,
Â  Â  display: 'block',
Â  Â  width: '100%',
Â  Â  boxSizing: 'border-box',
Â  Â  marginBottom: 15,
Â  Â  marginTop: 5,
Â  Â  backgroundColor: WHITE
};

const buttonPrimaryStyle = {
Â  Â  background: PRIMARY_COLOR,
Â  Â  color: WHITE,
Â  Â  padding: '12px 20px',
Â  Â  borderRadius: 4,
Â  Â  border: 'none',
Â  Â  fontWeight: 'bold',
Â  Â  cursor: 'pointer',
Â  Â  transition: 'background-color 0.2s',
};

export default function CreateCourse() {
Â  const dispatch = useDispatch();
Â  const navigate = useNavigate();
Â  
Â  // Get global courses list for prerequisites
Â  const { loading, error, items: allCourses } = useSelector(s => s.courses);
Â  
Â  const [form, setForm] = useState({ 
        title: '', 
        description: '', 
        isPublished: false,
        prerequisiteCourse: '' // ðŸŽ¯ NEW FIELD
    });

Â  // ðŸŽ¯ Fetch all courses on load for the prerequisite dropdown
Â  useEffect(() => {
Â  Â  dispatch(fetchCourses());
Â  }, [dispatch]);

Â  const onChange = (e) => {
    const { name, value, type, checked } = e.target;
    // Special handling for prerequisiteCourse: store null if 'none' is selected
    const finalValue = name === 'prerequisiteCourse' && value === '' ? null : value;

    setForm({ 
        ...form, 
        [name]: type === 'checkbox' ? checked : finalValue 
    });
};

Â  const onSubmit = async (e) => {
Â  Â  e.preventDefault();
Â  Â  try {
Â  Â  Â  // Only send the prerequisiteCourse field if it's set
Â  Â  Â  const payload = {
Â  Â  Â  Â  ...form,
Â  Â  Â  Â  prerequisiteCourse: form.prerequisiteCourse || undefined
Â  Â  Â  };
Â  Â  Â  await dispatch(createCourse(payload)).unwrap();
Â  Â  Â  navigate('/admin/dashboard');
Â  Â  } catch (err) {
Â  Â  Â  console.error('Create failed', err);
Â  Â  }
Â  };

Â  return (
Â  Â  <div style={{ 
Â  Â  Â  Â  maxWidth: 720, 
Â  Â  Â  Â  margin: '30px auto', 
Â  Â  Â  Â  padding: 30, 
Â  Â  Â  Â  backgroundColor: WHITE,
Â  Â  Â  Â  borderRadius: 8,
Â  Â  Â  Â  boxShadow: '0 4px 12px rgba(0,0,0,0.1)'
Â  Â  }}>
Â  Â  Â  <h2 style={{ color: PRIMARY_COLOR, borderBottom: `2px solid ${SOFT_BORDER_COLOR}`, paddingBottom: 10, marginBottom: 20 }}>
Â  Â  Â  Â  Â  Create New Course
Â  Â  Â  </h2>
Â  Â  Â  <form onSubmit={onSubmit}>
Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  <label style={{ fontWeight: 'bold', display: 'block' }}>Title</label>
Â  Â  Â  Â  Â  <input name="title" value={form.title} onChange={onChange} required style={inputStyle} />
Â  Â  Â  Â  </div>
Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  <label style={{ fontWeight: 'bold', display: 'block' }}>Description</label>
Â  Â  Â  Â  Â  <textarea 
Â  Â  Â  Â  Â  Â  Â  name="description" 
Â  Â  Â  Â  Â  Â  Â  value={form.description} 
Â  Â  Â  Â  Â  Â  Â  onChange={onChange} 
Â  Â  Â  Â  Â  Â  Â  rows={4} 
Â  Â  Â  Â  Â  Â  Â  style={{ ...inputStyle, resize: 'vertical' }} 
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>
        {/* ðŸŽ¯ NEW PREREQUISITE SELECT FIELD */}
        <div>
Â  Â  Â  Â  Â  <label style={{ fontWeight: 'bold', display: 'block' }}>Prerequisite Course (Optional)</label>
            <select 
                name="prerequisiteCourse" 
                value={form.prerequisiteCourse || ''} 
                onChange={onChange} 
                style={inputStyle}
            >
                <option value="">-- No Prerequisite --</option>
                {allCourses.filter(c => c._id !== form.id).map(course => (
                    <option key={course._id} value={course._id}>
                        {course.title}
                    </option>
                ))}
            </select>
            {/* Display message if courses are loading for the dropdown */}
            {loading && allCourses.length === 0 && <p style={{marginTop: -10}}>Loading courses...</p>}
Â  Â  Â  Â  </div>
        {/* END NEW FIELD */}
Â  Â  Â  Â  <div style={{ marginBottom: 20 }}>
Â  Â  Â  Â  Â  <label style={{ fontWeight: 'bold', display: 'flex', alignItems: 'center', cursor: 'pointer' }}>
Â  Â  Â  Â  Â  Â  <input 
Â  Â  Â  Â  Â  Â  Â  Â  name="isPublished" 
Â  Â  Â  Â  Â  Â  Â  Â  type="checkbox" 
Â  Â  Â  Â  Â  Â  Â  Â  checked={form.isPublished} 
Â  Â  Â  Â  Â  Â  Â  Â  onChange={onChange} 
Â  Â  Â  Â  Â  Â  Â  Â  style={{ width: 'auto', marginRight: 8, marginTop: 0 }}
Â  Â  Â  Â  Â  Â  /> Publish Course Now
Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  <div style={{ marginTop: 20 }}>
Â  Â  Â  Â  Â  <button 
Â  Â  Â  Â  Â  Â  Â  Â  type="submit" 
Â  Â  Â  Â  Â  Â  Â  Â  disabled={loading} 
Â  Â  Â  Â  Â  Â  Â  Â  style={{ 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ...buttonPrimaryStyle, 
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  opacity: loading ? 0.7 : 1,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  cursor: loading ? 'not-allowed' : 'pointer'
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  {loading ? 'Creating...' : 'Create Course'}
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  {error && <p style={{ color: DANGER_COLOR, marginTop: 15, fontWeight: 'bold' }}>Error: {error}</p>}
Â  Â  Â  </form>
Â  Â  </div>
Â  );
}