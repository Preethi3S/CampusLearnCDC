import React from 'react';
import { Link } from 'react-router-dom';
import CodingLinks from '../components/CodingLinks'; 

// --- THEME CONSTANTS (Consistent across components) ---
const PRIMARY_COLOR = '#473E7A'; // MongoDB Purple
const SOFT_BORDER_COLOR = '#EBEBEB'; 
const MUTE_GRAY = '#6B7280';
const SUCCESS_COLOR = '#10B981'; // Teal/Green for completion

export default function ModuleCard({ module, completed, locked, onComplete, courseId, levelId }) {
Â  
Â  // --- 1. LOCKED MODULE (Unified Look) ---
Â  if (locked) {
Â  Â  return (
Â  Â  Â  <div style={{ 
            padding: 15, 
            border: `1px solid ${SOFT_BORDER_COLOR}`, 
            borderRadius: 8, 
            background: '#F5F5F5', // Lightest gray background
            color: MUTE_GRAY, 
            marginBottom: 8,
            boxShadow: '0 1px 2px rgba(0,0,0,0.04)'
        }}>
Â  Â  Â  Â  <strong>{module.title}</strong> ({module.type}) - Locked ðŸ”’
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  let youtubeEmbedUrl = '';
Â  // ... YouTube URL parsing logic remains the same ...
Â  if (module.type === 'resource' && module.content && module.content.url) {
Â  Â  try {
Â  Â  Â  const url = new URL(module.content.url);
Â  Â  Â  const videoId = url.searchParams.get('v');
Â  Â  Â  if (videoId) {
Â  Â  Â  Â  Â  youtubeEmbedUrl = `https://www.youtube.com/embed/${videoId}`;
Â  Â  Â  } else {
Â  Â  Â  Â  Â  youtubeEmbedUrl = module.content.url; 
Â  Â  Â  }
Â  Â  } catch (e) {
Â  Â  Â  youtubeEmbedUrl = module.content.url; 
Â  Â  }
Â  }

Â  const commonCardStyle = {
        padding: 15, 
        border: `1px solid ${SOFT_BORDER_COLOR}`, 
        borderRadius: 8, 
        marginBottom: 12,
        background: 'white',
        boxShadow: '0 1px 3px rgba(0,0,0,0.06)',
        borderLeft: completed ? `4px solid ${SUCCESS_COLOR}` : `4px solid ${PRIMARY_COLOR}20` // Subtle left accent
    };

Â  switch (module.type) {
Â  Â  case 'resource': 
Â  Â  Â  return (
Â  Â  Â  Â  <div style={commonCardStyle}>
Â  Â  Â  Â  Â  <strong style={{ color: PRIMARY_COLOR }}>{module.title}</strong> ({module.type})
Â  Â  Â  Â  Â  <div style={{ marginTop: 12, marginBottom: 8, overflow: 'hidden' }}>
Â  Â  Â  Â  Â  Â  {youtubeEmbedUrl ? (
Â  Â  Â  Â  Â  Â  Â  Â  <iframe
Â  Â  Â  Â  Â  Â  Â  Â  src={youtubeEmbedUrl}
Â  Â  Â  Â  Â  Â  Â  Â  width="100%" 
Â  Â  Â  Â  Â  Â  Â  Â  height="315"
Â  Â  Â  Â  Â  Â  Â  Â  frameBorder="0"
Â  Â  Â  Â  Â  Â  Â  Â  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
Â  Â  Â  Â  Â  Â  Â  Â  allowFullScreen
Â  Â  Â  Â  Â  Â  Â  Â  style={{ maxWidth: 560 }}
Â  Â  Â  Â  Â  Â  Â  Â  ></iframe>
Â  Â  Â  Â  Â  Â  ) : <p style={{ color: 'red' }}>Resource URL not found or invalid.</p>}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  {!completed ? (
Â  Â  Â  Â  Â  Â  <button 
                onClick={onComplete} 
                style={{ 
                    marginTop: 8, 
                    background: PRIMARY_COLOR, 
                    color: '#fff', 
                    padding: '8px 16px',
                    borderRadius: 4,
                    border: 'none',
                    fontWeight: 'bold'
                }}
            >
Â  Â  Â  Â  Â  Â  Â  Mark as Completed
Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  ) : <p style={{ color: SUCCESS_COLOR, fontWeight: 'bold' }}>Completed âœ…</p>}
Â  Â  Â  Â  </div>
Â  Â  Â  );

Â  Â  case 'quiz': 
Â  Â  Â  return (
Â  Â  Â  Â  <div style={commonCardStyle}>
Â  Â  Â  Â  Â  <strong style={{ color: PRIMARY_COLOR }}>{module.title}</strong> ({module.type})
Â  Â  Â  Â  Â  {!completed && !locked ? (
Â  Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  Â  to={`/student/course/${courseId}/level/${levelId}/module/${module._id}/quiz`}
Â  Â  Â  Â  Â  Â  Â  style={{ 
                    display: 'inline-block', 
                    marginTop: 10, 
                    background: PRIMARY_COLOR, 
                    color: '#fff', 
                    padding: '8px 16px', 
                    textDecoration: 'none',
                    borderRadius: 4,
                    border: 'none',
                    fontWeight: 'bold'
                }}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Start Quiz
Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  ) : null}
Â  Â  Â  Â  Â  {completed && <p style={{ color: SUCCESS_COLOR, fontWeight: 'bold' }}>Completed âœ…</p>}
Â  Â  Â  Â  Â  {locked && <p style={{ color: MUTE_GRAY }}>This module is locked until previous module is completed.</p>}
Â  Â  Â  Â  </div>
Â  Â  Â  );

Â  Â  case 'coding': 
      // FIX: Since this card is only rendered if it's NOT locked, 
      // we remove the lock check and rely on the parent (CourseView.js) to filter.
      // If the parent calls this for an unlocked coding module, we pass the rendering to CodingLinks.
      
      // If you are rendering the *locked* coding module here (as per your original code),
      // we must rely on the 'locked' prop and render the content only if unlocked.
      
      // If this block is executed, it means the parent component (CourseView) 
      // determined it should be UNLOCKED, so we delegate to CodingLinks.
      
      // Note: If the parent sends 'locked: true', the function returns the locked div at the top.
Â  Â  Â  return (
Â  Â  Â  Â  <div style={commonCardStyle}>
Â  Â  Â  Â  Â  <strong style={{ color: PRIMARY_COLOR }}>{module.title}</strong> ({module.type})
Â  Â  Â  Â  Â  Â  <hr style={{ margin: '8px 0', borderTop: `1px solid ${SOFT_BORDER_COLOR}` }}/>
Â  Â  Â  Â  Â  <CodingLinks 
Â  Â  Â  Â  Â  Â  Â  Â  courseId={courseId}
Â  Â  Â  Â  Â  Â  Â  Â  levelId={levelId}
Â  Â  Â  Â  Â  Â  Â  Â  moduleId={module._id}
Â  Â  Â  Â  Â  Â  Â  Â  content={module.content}
                completed={completed} // Pass completion status
                onComplete={onComplete} // Pass completion handler
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  </div>
Â  Â  Â  );

Â  Â  default:
Â  Â  Â  return null;
Â  }
}